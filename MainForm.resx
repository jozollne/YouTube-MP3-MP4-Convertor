<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>